---
version: '3'
services:
  umami:
    image: ghcr.io/umami-software/umami:postgresql-latest
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgresql://umami:umami@db:5432/umami
      DATABASE_TYPE: postgresql
      APP_SECRET: replace-me-with-a-random-string
    depends_on:
      db:
        condition: service_healthy
    restart: always
    networks:
      - no-internet
      - backbone
    labels: 
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_backbone"
      - "traefik.http.routers.matamo.rule=Host(`matamo.aquiver.de`)"
      - "traefik.http.routers.matamo.entrypoints=websecure"
      - "traefik.http.routers.matamo.tls=true"
      - "traefik.http.routers.matamo.tls.certresolver=wildcard-godaddy"
      - "traefik.http.routers.matamo.service=matamo-service@docker"
      - "traefik.http.services.matamo-service.loadbalancer.server.port=3000"
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:3000/api/heartbeat"]
      interval: 5s
      timeout: 5s
      retries: 5
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: umami
      POSTGRES_USER: umami
      POSTGRES_PASSWORD: umami
    volumes:
      - umami-db-data:/var/lib/postgresql/data
    restart: always
    networks:
      - no-internet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
      
volumes:
  umami-db-data:

networks:
  no-internet:
    driver: bridge
    internal: true
  internet:
    driver: bridge
  backbone:
#    name: traefik_backbone
    external: true
